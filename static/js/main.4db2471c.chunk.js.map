{"version":3,"sources":["store/constants.js","store/reducers.js","store/store.js","notes/moments.js","store/actions.js","notes/notes.js","todolist/Task.js","todolist/List.js","productivity/Slider.js","App.js","serviceWorker.js","index.js"],"names":["ACTIONS","task","state","type","payload","editing","done","datastring","localStorage","getItem","data","JSON","parse","undefined","store","createStore","combineReducers","moment","note","tasklist","filter","item","id","action","map","i","includes","text","productivity","value","subscribe","stringify","getState","setItem","window","Moments","_input","contentEditable","ref","v","onBlur","dispatch","setMoment","innerText","defaultValue","className","Notes","setNote","Task","_text","_duration","duration","onSave","f","onCheck","onEdit","edit","autoFocus","placeholder","style","margin","onClick","_textvalue","_durationvalue","textDecoration","defaultChecked","onChange","List","v4","saveTask","checkTask","editTask","key","Slider","_slider","setProductivity","min","max","App","this","unsubscribe","forceUpdate","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4db2471c.chunk.js","sourcesContent":["export const ACTIONS = {\n    SET_MOMENT: \"SET_MOMENT\",\n    SET_NOTE: \"SET_NOTE\",\n    SAVE_TASK: \"SAVE_TASK\",\n    CHECK_TASK: \"CHECK_TASK\",\n    EDIT_TASK: \"EDIT_TASK\",\n    DELETE_TASK: \"DELETE_TASK\",\n    SET_PRODUCTIVITY: \"SET_PRODUCTIVITY\"\n}\n\nexport const CONFIG = {\n    LOCALSTORAGE: \"achtsamkeit-store\"\n}","import { ACTIONS } from \"./constants\"\n\nexport const moment = (state = {}, { type, ...payload }) => {\n    switch (type) {\n        case ACTIONS.SET_MOMENT:\n            return { ...state, ...payload }\n        default:\n            return state\n    }\n}\n\nexport const note = (state = {}, { type, ...payload }) => {\n    switch (type) {\n        case ACTIONS.SET_NOTE:\n            return { ...state, ...payload }\n        default:\n            return state\n    }\n}\n\nexport const tasklist = (state = [], { type, ...payload }) => {\n    switch (type) {\n        case ACTIONS.DELETE_TASK:\n            return state.filter(item => item.id !== payload.id)\n        case ACTIONS.CHECK_TASK:\n        case ACTIONS.EDIT_TASK:\n        case ACTIONS.SAVE_TASK:\n            var action = { type, ...payload }\n            if (state.map(i => i.id).includes(payload.id))\n                return state\n                    .map(item => item.id !== payload.id ?\n                        item :\n                        task(item, action))\n                    .filter(item => !!item.text)\n            else\n                return [...state, task({}, action)]\n        default:\n            return state\n    }\n}\n\nexport const task = (state = {}, { type, ...payload }) => {\n    switch (type) {\n        case ACTIONS.SAVE_TASK:\n            return { ...state, ...payload, editing: false }\n        case ACTIONS.CHECK_TASK:\n            return { ...state, done: !state.done }\n        case ACTIONS.EDIT_TASK:\n            return { ...state, editing: true }\n        default:\n            return state\n    }\n}\n\nexport const productivity = (state = 50, { type, ...payload }) => {\n    switch (type) {\n        case ACTIONS.SET_PRODUCTIVITY:\n            return payload.value\n        default:\n            return state\n    }\n}","import { createStore, combineReducers } from 'redux'\nimport { CONFIG } from './constants'\nimport { moment, note, tasklist, productivity } from './reducers'\n\nconst { LOCALSTORAGE } = CONFIG\n\nconst datastring = localStorage.getItem(LOCALSTORAGE)\nconst data = datastring ? JSON.parse(datastring) : undefined\n\nexport const store = createStore(combineReducers({\n    moment, note, tasklist, productivity\n}), data)\n\nstore.subscribe(() => {\n    const state = JSON.stringify(store.getState())\n    localStorage.setItem(LOCALSTORAGE, state)\n})\n\nwindow.store = store","import React from 'react'\nimport { store } from '../store/store'\nimport { setMoment } from '../store/actions';\nimport './moments.css'\n\nexport const Moments = () => {\n    let _input;\n    const { text = \"\" } = store.getState().moment\n\n    const save = () => {\n        store.dispatch(\n            setMoment(_input.innerText)\n        )\n    }\n    return (\n        <div>\n            <h2>Glasmomente</h2>\n            <div contentEditable\n                ref={v => _input = v}\n                onBlur={save}\n                defaultValue={text}\n                className=\"theme-d1 moment w3-round w3-mobile w3-padding\">\n                {text}\n            </div>\n        </div>\n    )\n}","import { ACTIONS } from \"./constants\";\nimport { v4 } from \"uuid\"\n\nexport const setMoment = text => ({ type: ACTIONS.SET_MOMENT, text })\n\nexport const setNote = text => ({ type: ACTIONS.SET_NOTE, text })\n\nexport const saveTask = (id, text, duration) => ({\n    type: ACTIONS.SAVE_TASK, text, duration,\n    id: id ? id : v4()\n})\n\nexport const checkTask = id => ({ type: ACTIONS.CHECK_TASK, id })\n\nexport const editTask = id => ({ type: ACTIONS.EDIT_TASK, id })\n\nexport const deleteTask = id => ({ type: ACTIONS.DELETE_TASK, id })\n\nexport const setProductivity = value => ({ type: ACTIONS.SET_PRODUCTIVITY, value })","import React from 'react'\nimport { store } from '../store/store'\nimport { setNote } from '../store/actions';\nimport './notes.css'\n\nexport const Notes = () => {\n    let _input;\n    const { text = \"\" } = store.getState().note\n\n    const save = () => {\n        store.dispatch(\n            setNote(_input.innerText)\n        )\n    }\n    return (\n        <div>\n            <h2>Notizen</h2>\n            <div contentEditable\n                ref={v => _input = v}\n                onBlur={save}\n                defaultValue={text}\n                className=\"theme-l1 note w3-round w3-mobile w3-padding\">\n                {text}\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport './task.css'\n\nexport const Task = ({ id = \"\", text = \"\", done = false, duration, editing = false, onSave = f => f, onCheck = f => f, onEdit = f => f }) => {\n\n    const save = () => {\n        let _textvalue = _text.value\n        let _durationvalue = _duration.value\n        _text.value = \"\"\n        _duration.value = \"\"\n        onSave(id, _textvalue, _durationvalue)\n    }\n    const check = () => onCheck(id)\n    const edit = () => onEdit(id)\n\n    let _text, _duration\n\n    if (editing)\n        return (\n            <div className=\"w3-row\">\n                <input\n                    defaultValue={text}\n                    autoFocus\n                    className=\"w3-col l7 m7 s12 w3-input\"\n                    placeholder=\"Neue Aufgabe\"\n                    type=\"text\"\n                    ref={v => _text = v}\n                />\n                <input\n                    defaultValue={duration}\n                    type=\"duration\"\n                    className=\"w3-col l2 m2 s12 w3-input\" placeholder=\"Dauer\"\n                    style={{ margin: \"0 0.5em\" }}\n                    ref={v => _duration = v}\n                />\n                <input\n                    type=\"button\"\n                    value=\"Speichern\"\n                    className=\"w3-col l2 m2 s4 w3-border-bottom w3-button\"\n                    onClick={save}\n                />\n            </div>\n        )\n\n    return (\n        <div className=\"w3-row w3-margin\">\n            <span\n                style={{ textDecoration: done ? \"line-through\" : \"none\" }}\n                className=\"text w3-col l9 m9 s9\"\n                onClick={edit}>\n                {text}\n            </span>\n            <span\n                style={{ textDecoration: done ? \"line-through\" : \"none\" }}\n                className=\"duration w3-border-bottom w3-col l2 m2 s2 w3-center\"\n                onClick={edit}>\n                {duration}\n            </span>\n            <input\n                type=\"checkbox\"\n                defaultChecked={done}\n                onChange={check}\n                className=\"checkbox w3-col l1 m1 s1\" />\n        </div>\n    )\n}\n","import React from 'react'\nimport { store } from '../store/store'\nimport { Task } from './Task'\nimport { saveTask, checkTask, editTask, deleteTask } from '../store/actions'\n\nexport const List = () => {\n    const { tasklist = [] } = store.getState()\n\n    const onSave = (id, text, duration) => {\n        store.dispatch(saveTask(id, text, duration))\n    }\n    const onCheck = id => store.dispatch(checkTask(id))\n    const onEdit = id => store.dispatch(editTask(id))\n    const onDelete = id => store.dispatch(deleteTask(id))\n\n    return (\n        <div>\n            <h2>Nicht vergessen</h2>\n            {tasklist.map((task, i) => (\n                <Task\n                    key={i}\n                    {...task}\n                    onCheck={onCheck}\n                    onSave={onSave}\n                    onEdit={onEdit} />\n            ))}\n            <hr />\n            <Task editing={true} onSave={onSave} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './slider.css'\nimport { store } from '../store/store'\nimport { setProductivity } from '../store/actions';\n\nexport const Slider = () => {\n    let _slider;\n    const value = store.getState().productivity\n    const update = () => store.dispatch(setProductivity(_slider.value))\n    return (\n        <div className=\"w3-row\">\n            <h2>So produktiv warst du heute</h2>\n            <input\n                ref={v => _slider = v}\n                onChange={update}\n                defaultValue={value}\n                type=\"range\"\n                className=\"productivity w3-col l11 m11 s11\"\n                min={0}\n                max={100} />\n            <span className=\"w3-col l1 m1 s1 productivity\">{value}</span>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { Moments } from './notes/moments'\nimport { Notes } from './notes/notes';\nimport { List } from './todolist/List'\nimport { store } from './store/store';\nimport { Slider } from './productivity/Slider';\n\nclass App extends Component {\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() => this.forceUpdate())\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  render() {\n    return (\n      <div className=\"app w3-container\">\n        <Moments />\n        <List />\n        <Slider />\n        <Notes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport 'w3-css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}