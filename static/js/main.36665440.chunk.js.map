{"version":3,"sources":["icons/Arrow.js","utils.js","store/todos.js","store/journal.js","DateSelector.js","TextArea.js","Moment.js","Note.js","RangeInput.js","Productivity.js","icons/Trash.js","TextInput.js","Task.js","TodoList.js","App.js","serviceWorker.js","store/logger.js","store/store.js","index.js"],"names":["Arrow","xmlns","width","height","fill","viewBox","className","d","getOffsetDay","offset","timestamp","date","Date","setDate","getDate","getTime","getNextDay","getPrevDay","normalizeTimestamp","setHours","mapProductivityToHSL","prod","range","target","hue","input","min","max","tMin","v4","require","TASK_CREATED","TASK_DELETED","todoList","state","type","payload","id","filter","item","journal","combineReducers","entries","today","todos","current","connect","dispatch","f","goToToday","now","useEffect","onClick","toLocaleDateString","TextArea","value","setValue","onChange","e","Moment","props","Note","RangeInput","Productivity","style","backgroundColor","Trash","TextInput","defaultValue","Task","content","done","setContent","onToggleDone","onDelete","useState","edit","setEdit","c","tasks","createTask","deleteTask","toggleDone","toggleTaskDone","editTask","items","newTask","setNewTask","map","key","length","placeholder","entry","updateFactory","update","moment","productivity","note","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","datastring","localStorage","getItem","data","JSON","parse","undefined","store","createStore","applyMiddleware","next","action","rest","getState","subscribe","stringify","setItem","root","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.36665440.chunk.js","sourcesContent":["import React from 'react'\n\nconst Arrow = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            className='arrow'>\n            <path d=\"M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z\" />\n        </svg>\n    )\n}\n\nexport default Arrow\n","export const getOffsetDay = offset => timestamp => {\n    const date = new Date(timestamp)\n    date.setDate(date.getDate() + offset)\n    return date.getTime()\n}\n\nexport const getNextDay = getOffsetDay(1)\n\nexport const getPrevDay = getOffsetDay(-1)\n\nexport const normalizeTimestamp = timestamp => {\n    const date = new Date(timestamp)\n    return date.setHours(0, 0, 0, 0)\n}\n\nexport const printDate = timestamp => {\n    const d = new Date(timestamp)\n    return d.toLocaleDateString()\n    // return `${d.getDay()}.${d.getMonth()}.${d.getFullYear()}`\n}\n\nexport const scale = (range, target) => input => {\n    const [min, max] = range\n    const [tMin, tMax] = target\n    return ((input - min) / max) * (tMax - tMin) + tMin\n}\n\nexport const mapProductivityToHSL = prod => {\n    const hue = scale([0, 100], [240, 360])(prod)\n    return `hsl(${hue}, 100%, 75%)`\n}","const { v4 } = require(\"uuid\")\n\nexport const TASK_CREATED = \"todo/task_created\"\nexport const TASK_DONE = \"todo/task_done\"\nexport const TASK_EDITED = \"todo/task_edited\"\nexport const TASK_DELETED = \"todo/task_deleted\"\n\nexport const createTask = (timestamp, content) => ({\n    type: TASK_CREATED, timestamp, content, id: v4(), done: false\n})\n\nexport const toggleTaskDone = (id, done) => ({\n    type: TASK_DONE, id, done\n})\n\nexport const editTask = (id, content) => ({\n    type: TASK_EDITED, id, content\n})\n\nexport const deleteTask = (timestamp, id) => ({\n    type: TASK_DELETED, id, timestamp\n})\n\nexport const todos = (state = {}, { type, ...payload }) => {\n    switch (type) {\n        case TASK_CREATED:\n            return {\n                ...state,\n                [payload.id]: payload\n            }\n        case TASK_EDITED:\n        case TASK_DONE:\n            return {\n                ...state,\n                [payload.id]: { ...state[payload.id], ...payload }\n            }\n        case TASK_DELETED:\n            delete state[payload.id]\n            return state\n\n        default:\n            return state\n    }\n}\n\nexport const todoList = (state = [], { type, ...payload }) => {\n    switch (type) {\n        case TASK_CREATED:\n            return [...state, payload.id]\n        case TASK_DELETED:\n            return state.filter(item => item !== payload.id)\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\"\nimport { normalizeTimestamp } from \"../utils\"\nimport { TASK_CREATED, TASK_DELETED, todoList } from \"./todos\"\n\nconst JOURNAL_DATE_SET = 'journal/date_set'\n\nexport const setDate = timestamp => ({\n    type: JOURNAL_DATE_SET, date: normalizeTimestamp(timestamp)\n})\n\n\nexport const current = (state = \"\", { type, ...payload }) => {\n    switch (type) {\n        case JOURNAL_DATE_SET:\n            return payload.date\n        default:\n            return state\n    }\n}\n\nconst JOURNAL_UPDATED = 'journal/update'\n\nexport const updateJournal = (timestamp, item) => ({\n    type: JOURNAL_UPDATED, timestamp, item\n})\n\n\nexport const entries = (state = {}, { type, ...payload }) => {\n    switch (type) {\n        case JOURNAL_UPDATED:\n            return {\n                ...state,\n                [payload.timestamp]: payload.item\n            }\n        case TASK_CREATED:\n        case TASK_DELETED:\n            let today = state[payload.timestamp] || {}\n            return {\n                ...state,\n                [payload.timestamp]: {\n                    ...today,\n                    todos: todoList(today.todos, { type, ...payload })\n                }\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const journal = combineReducers({ entries, current })","import React from 'react'\nimport { connect } from 'react-redux'\nimport Arrow from './icons/Arrow'\nimport { setDate } from './store/journal'\nimport { getPrevDay, getNextDay, printDate } from './utils'\nimport { useEffect } from 'react'\n\nconst DateSelector = ({ date, setDate = f => f }) => {\n    const goToToday = () => { setDate(Date.now()) }\n    useEffect(goToToday, [])\n    return (\n        <div className=\"date-selector\">\n            <div className='left' onClick={() => setDate(getPrevDay(date))}>\n                <Arrow />\n            </div>\n            <div\n                onClick={goToToday}\n                className=\"date\">{printDate(date)}</div>\n            <div className='right' onClick={() => setDate(getNextDay(date))}>\n                <Arrow />\n            </div>\n        </div >\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    date: state.journal.current\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setDate: timestamp => dispatch(setDate(timestamp))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateSelector)\n","import React from 'react'\n\nconst TextArea = ({ value, setValue = f => f }) => {\n    return (\n        <textarea value={value} onChange={e => setValue(e.target.value)}>\n\n        </textarea>\n    )\n}\n\nexport default TextArea\n","import React from 'react'\nimport TextArea from './TextArea'\n\nconst Moment = (props) => {\n    return (\n        <div className=\"moment\">\n            <h2>Glasmomente</h2>\n            <TextArea {...props} />\n        </div>\n    )\n}\n\nexport default Moment\n","import React from 'react'\nimport TextArea from './TextArea'\n\nconst Note = (props) => {\n    return (\n        <div className=\"note\">\n            <h2>Notizen</h2>\n            <TextArea {...props} />\n        </div>\n    )\n}\n\nexport default Note\n","import React from 'react'\n\nconst RangeInput = ({ value, setValue = f => f }) => {\n    return (\n        <input\n            type=\"range\"\n            className='range-input'\n            value={value}\n            onChange={e => setValue(e.target.value)} />\n    )\n}\n\nexport default RangeInput\n","import React from 'react'\nimport RangeInput from './RangeInput'\nimport { mapProductivityToHSL } from './utils'\n\nconst Productivity = ({ value = 50, ...props }) => {\n    return (\n        <div\n            className='productivity'>\n            <h2>Produktivität</h2>\n            <div style={{ backgroundColor: mapProductivityToHSL(value) }}>\n                <RangeInput value={value} {...props} />\n                <h3>{value}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Productivity\n","import React from 'react'\n\nconst Trash = ({ props }) => {\n    return (\n        <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 6l3 18h12l3-18h-18zm19-4v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.316c0 .901.73 2 1.631 2h5.711z\" />\n        </svg>\n    )\n}\n\nexport default Trash\n","import React from 'react'\n\nconst TextInput = ({ value, setValue = f => f, ...props }) => {\n    return (\n        <input\n            {...props}\n            type=\"text\"\n            className='text-input'\n            defaultValue={value}\n            onChange={e => setValue(e.target.value)} />\n    )\n}\n\nexport default TextInput\n","import React, { useEffect, useState } from 'react'\nimport Trash from './icons/Trash'\nimport TextInput from './TextInput'\n\nconst Task = ({ id, content, done = false, setContent = f => f,\n    onToggleDone = f => f, onDelete = f => f }) => {\n    const [edit, setEdit] = useState(false)\n    useEffect(() => { if (!content) onDelete(id) }, [content])\n\n    if (edit)\n        return (\n            <div className='task edit'>\n                <TextInput value={content} setValue={c => setContent(id, c)} />\n                <div onClick={() => setEdit(!edit)} className='button'>\n                    <div className=\"checkmark\">&nbsp;</div>\n                </div>\n                <div onClick={() => onDelete(id)} className='delete button'>\n                    <Trash />\n                </div>\n            </div>\n        )\n\n    return (\n        <div className={`task ${done ? \"done\" : \"\"}`}>\n            <div onClick={() => setEdit(!edit)}>{content}</div>\n            <div onClick={() => onToggleDone(id, !done)} className=\"button checkbox\">\n                <div className=\"checkmark\">&nbsp;</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Task\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createTask, deleteTask, editTask, toggleTaskDone } from './store/todos'\nimport Task from './Task'\nimport TextInput from './TextInput'\n\nconst TodoList = ({ current, entries, tasks, createTask = f => f, ...props }) => {\n    const today = entries[current] || {}\n    const items = today.todos || []\n    const [newTask, setNewTask] = useState()\n    useEffect(() => { setNewTask() }, [items])\n    return (\n        <div className='todo-list'>\n            <h2>Todo</h2>\n            {items.map(id => (\n                <Task\n                    onToggleDone={props.toggleDone}\n                    setContent={props.editTask}\n                    onDelete={props.onDelete(current)}\n                    {...tasks[id]} id={id}\n                    key={id} />\n            ))}\n            {items.length < 5 &&\n                <div className=\"task\">\n                    <TextInput placeholder=\"neue Aufgabe\" setValue={setNewTask} value={newTask} />\n                    <div className=\"add button\"\n                        onClick={() => { if (newTask) createTask(current, newTask) }}\n                    >+</div>\n                </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    ...state.journal,\n    tasks: state.todos\n})\n\nconst mapDispatchToProps = dispatch => ({\n    createTask: (timestamp, content) => dispatch(createTask(timestamp, content)),\n    onDelete: timestamp => id => dispatch(deleteTask(timestamp, id)),\n    toggleDone: (id, done) => dispatch(toggleTaskDone(id, done)),\n    editTask: (id, content) => dispatch(editTask(id, content))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport DateSelector from './DateSelector';\nimport Moments from './Moment';\nimport Note from './Note';\nimport Productivity from './Productivity';\nimport { updateJournal } from './store/journal';\nimport './style.scss';\nimport TodoList from './TodoList';\n\nconst App = ({ timestamp, entry = {}, updateFactory = f => f }) => {\n  const update = updateFactory(timestamp)\n\n  return (\n    <div className=\"app\">\n      <DateSelector />\n      <Moments\n        value={entry.moment || \"\"}\n        setValue={moment => update({ ...entry, moment })}\n      />\n      <TodoList />\n      <Productivity\n        value={entry.productivity || \"\"}\n        setValue={productivity => update({ ...entry, productivity })}\n      />\n      <Note\n        value={entry.note || \"\"}\n        setValue={note => update({ ...entry, note })}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  entry: state.journal.entries[state.journal.current],\n  timestamp: state.journal.current\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateFactory: date => entry => dispatch(updateJournal(date, entry))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const logger = store => next => action => {\n    const { type, ...rest } = action\n    console.log('dispatch', type, rest)\n    next(action)\n    console.log('next state', store.getState())\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { journal } from './journal'\nimport { logger } from './logger'\nimport { todos } from './todos'\n\nconst LOCALSTORAGE = 'achtsamkeit-data'\n\nconst datastring = localStorage.getItem(LOCALSTORAGE)\nconst data = datastring ? JSON.parse(datastring) : undefined\n\nexport const store = createStore(combineReducers({\n    journal, todos\n}), data, applyMiddleware(logger))\n\nstore.subscribe(() => {\n    const state = JSON.stringify(store.getState())\n    localStorage.setItem(LOCALSTORAGE, state)\n})\n\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nconst root = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}